[DEFAULT]
dhcpbridge_flagfile=/etc/nova/nova.conf
dhcpbridge=/usr/bin/nova-dhcpbridge
state_path=/var/lib/nova
force_dhcp_release=True
verbose=True
ec2_private_dns_show_ip=True
enabled_apis=osapi_compute,metadata
transport_url = rabbit://openstack:{{ host.data.rabbitmq_password }}@{{ host.data.controller_host }}
auth_strategy = keystone
my_ip = {{ host.data.controller_host }}
{% if neutron %}
use_neutron = True
{% endif %}
firewall_driver = nova.virt.firewall.NoopFirewallDriver

[database]
connection = mysql+pymysql://nova:{{ host.data.nova_password }}@{{ host.data.controller_host }}/nova

[api_database]
connection = mysql+pymysql://nova:{{ host.data.nova_password }}@{{ host.data.controller_host }}/nova_api

[oslo_concurrency]
lock_path=/var/lock/nova

[libvirt]
use_virtio_for_bridges=True

[wsgi]
api_paste_config=/etc/nova/api-paste.ini

[keystone_authtoken]
auth_uri = http://{{ host.data.controller_host }}:5000
auth_url = http://{{ host.data.controller_host }}:35357
memcached_servers = {{ host.data.controller_host }}:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = nova
password = {{ host.data.nova_password }}

[vnc]
vncserver_listen = $my_ip
vncserver_proxyclient_address = $my_ip

[glance]
api_servers = http://{{ host.data.controller_host }}:9292

[scheduler]
discover_hosts_in_cells_interval = 30

[oslo_concurrency]
lock_path = /var/lib/nova/tmp

{% if placement %}
[placement]
os_region_name = RegionOne
project_domain_name = default
project_name = service
auth_type = password
user_domain_name = default
auth_url = http://{{ host.data.controller_host }}:35357/v3
username = placement
password = {{ host.data.placement_password }}
{% endif %}

{% if neutron %}
[neutron]
url = http://{{ host.data.controller_host }}:9696
auth_url = http://{{ host.data.controller_host }}:35357
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = neutron
password = {{ host.data.neutron_password }}
service_metadata_proxy = true
metadata_proxy_shared_secret = {{ host.data.metadata_secret }}
{% endif %}
